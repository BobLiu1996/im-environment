version: '3.2'

networks:
  im-network:
    driver: bridge

volumes:
  prometheus_data: {}
services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    volumes:
    - ./data/db_data:/var/lib/mysql
    - ./config/mysql/init:/docker-entrypoint-initdb.d/
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-time-zone=+8:00'
    ]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: im
      MYSQL_USER: mystic
      MYSQL_PASSWORD: mystic
    ports:
    - 3306:3306
    networks:
    - im-network

  redis:
    container_name: redis
    image: redislabs/redismod:latest
    ports:
    - 6379:6379
    networks:
    - im-network
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - 8082:8081
    networks:
    - im-network
  rmqnamesrv:
    image: apacherocketmq/rocketmq:4.5.0
    container_name: rmqnamesrv
    ports:
    - 9876:9876
    volumes:
    - ./data/rocketmq/logs:/home/rocketmq/logs
    - ./data/rocketmq/store:/home/rocketmq/store
    command: sh mqnamesrv
    networks:
    - im-network
  rmqbroker:
    image: apacherocketmq/rocketmq:4.5.0
    container_name: rmqbroker
    ports:
    - 10909:10909
    - 10911:10911
    - 10912:10912
    volumes:
    - ./config/rocketmq/broker.conf:/home/rocketmq/rocketmq-4.5.0/conf/broker.conf
    command: sh mqbroker -n rmqnamesrv:9876 -c ../conf/broker.conf
    depends_on:
    - rmqnamesrv
    environment:
    - JAVA_HOME=/usr/lib/jvm/jre
    networks:
    - im-network
  rmqdashboard:
    image: apacherocketmq/rocketmq-dashboard:1.0.0
    container_name: rmqdashboard
    ports:
    - 8081:8080
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rmqnamesrv:9876"
    depends_on:
    - rmqnamesrv
    - rmqbroker
    networks:
    - im-network

  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    volumes:
    - ./config/elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
    - "9200:9200"
    - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
    - im-network

  logstash:
    image: logstash:7.14.2
    container_name: logstash
    volumes:
    - ./config/elk/logstash.yml:/usr/share/logstash/config/logstash.yml
    - ./config/elk/pipeline:/usr/share/logstash/pipeline
    ports:
    - "5044:5044"
    - "5000:5000/tcp"
    - "5000:5000/udp"
    - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
    - im-network
    depends_on:
    - elasticsearch

  kibana:
    image: kibana:7.14.2
    container_name: kibana
    volumes:
    - ./config/elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
    - "5601:5601"
    networks:
    - im-network
    depends_on:
    - elasticsearch

  sentinel:
    image: bladex/sentinel-dashboard
    container_name: sentinel
    ports:
      - 8858:8858
    networks:
      - im-network

  nacos:
    image: nacos/nacos-server:2.0.3
    container_name: nacos-standalone-mysql
    env_file:
    - ./config/nacos/nacos-standlone-mysql.env
    volumes:
    - ./data/nacos_logs/:/home/nacos/logs
    - ./config/nacos/custom.properties:/home/nacos/init.d/custom.properties
    ports:
    - 8848:8848
    - 9848:9848
    - 9555:9555
    depends_on:
    - mysql
    restart: on-failure
    networks:
    - im-network
  apollo:
    image: nobodyiam/apollo-quick-start
    container_name: apollo
    depends_on:
    - mysql
    ports:
      - "8080:8080"   # Portal Web UI
      - "8070:8070"   # Config Service
      - "8090:8090"   # Admin Service
    environment:
      APOLLO_CONFIG_DB_URL: jdbc:mysql://mysql:3306/ApolloConfigDB?useUnicode=true&characterEncoding=UTF8
      APOLLO_PORTAL_DB_URL: jdbc:mysql://mysql:3306/ApolloPortalDB?useUnicode=true&characterEncoding=UTF8
      APOLLO_CONFIG_DB_USERNAME: root
      APOLLO_CONFIG_DB_PASSWORD: root
      APOLLO_PORTAL_DB_USERNAME: root
      APOLLO_PORTAL_DB_PASSWORD: root
      JAVA_OPTS: '-Xms100m -Xmx1000m -Xmn100m -Xss256k -XX:MetaspaceSize=10m -XX:MaxMetaspaceSize=250m'
    networks:
      - im-network
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    networks:
      - im-network


